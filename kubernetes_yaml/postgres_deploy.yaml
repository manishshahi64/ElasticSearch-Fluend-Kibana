apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
spec:
  selector:
    matchLabels:
      app: postgres
  replicas: 1
  template:
    metadata:
      labels:
        app: postgres
    spec:
      affinity:
        nodeAffinity:
          preferredDuringSchedulingIgnoredDuringExecution:
          - weight: 1
            preference:
              matchExpressions:
              - key: node
                operator: In
                values:
                - kworker1
      hostname: postgres
      containers:
      - name: postgres
        image: postgres:14
        imagePullPolicy: "IfNotPresent"
        env:
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: db          
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: db_user
              
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: db_pass

        volumeMounts:
        - name: postgres-volume-mount-1
          mountPath: /var/lib/postgresql/data
        - name: postgres-volume-mount-2
          mountPath: /tmp/manish  
      volumes:
      - name: postgres-volume-mount-1
        persistentVolumeClaim:
          claimName: postgres-pvc-1
      - name: postgres-volume-mount-2
        persistentVolumeClaim:
          claimName: postgres-pvc-2  
---
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: postgres-pv-1
    labels:
      type: local1
  spec:
    capacity:
      storage: 3Gi
    accessModes:
      - ReadWriteMany
    hostPath:
      path: /video/mydb
    nodeAffinity:
     required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: node
          operator: In
          values:
          - kworker1
---
  apiVersion: v1
  kind: PersistentVolume
  metadata:
    name: postgres-pv-2
    labels:
      type: local
  spec:
    capacity:
      storage: 3Gi
    accessModes:
      - ReadWriteMany
    hostPath:
      path: /video/sn-database
    nodeAffinity:
     required:
      nodeSelectorTerms:
      - matchExpressions:
        - key: node
          operator: In
          values:
          - kworker1
---
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgres-pvc-1
    labels:
      type: local1
  spec:
    storageClassName: ""
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 3Gi
    volumeName: postgres-pv-1

---
  apiVersion: v1
  kind: PersistentVolumeClaim
  metadata:
    name: postgres-pvc-2
    labels:
      type: local
  spec:
    storageClassName: ""
    accessModes:
      - ReadWriteMany
    resources:
      requests:
        storage: 3Gi
    volumeName: postgres-pv-2
---
  apiVersion: v1
  kind: Secret
  metadata:
    name: postgres-secret
    labels:
      app: postgres
  data:
    db: bXlkYg==
    db_user: bWFuaXNo
    db_pass: dGVzdF8xMjM=
---
  apiVersion: v1
  kind: Service
  metadata:
    name: postgres
    labels:
      app: postgres
  spec:
    ports:
    - name: postgres
      port: 5432
      targetPort: 5432
    selector:
      app: postgres